def ordinalDate(day: int, month: int, year: int) -> int:
    # ИСПОЛЬЗОВАТЬ: в абсолютном большинстве случаев мы и так знаем, что читаем документацию к функции, так что не стоит напрасно тратить символы docstring, а стоит сразу начинать описание с глагола
    #  есть разные стили оформления строки документации, но все они сходятся на том, что первая строка документации должна быть насколько возможно лаконичной и должна отвечать на вопрос "что делает?"
    #  описания параметров даются ниже: либо обычным текстом, либо специальным синтаксисом
    #  предложения не разбиваются посередине символом конца строки — используйте перенос строк (soft wrap) в редакторе
    """Преобразовывает дату из календарного формата в порядковый.

    :param day: календарный день
    :param month: календарный месяц
    :param year: календарный год
    :returns: порядковый номер дня в году
    """
    year_is_leap = year % 400 == 0 or year % 4 == 0 and year % 100 != 0
    # КОММЕНТАРИЙ: очень хорошо, что вспомнили про приведение bool к int — хвалю!
    month_days = [31, 28+year_is_leap, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    md = 0
    for i in range(month-1):
        md += month_days[i]
    return md + day


# ИСПОЛЬЗОВАТЬ: для распаковки объекта map нам не нужно преобразовывать в список
day, month, year = map(int, input('День, месяц, год: ').split())
print(f'Порядковый номер дня в году: {ordinalDate(day, month, year)}\n')


# stdout:
# День, месяц, год: 19 9 2022
# Порядковый номер дня в году: 262


# ИТОГ: очень хорошо! — 4/4
